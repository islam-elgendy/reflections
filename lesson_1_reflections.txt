How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It gave me all the differences between the two files, without needing to manually trace the difference

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps me learn from my mistakes, and use what I have previously coded again.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It will keep changes made more logical. No need to automatically save something that doesn't mean anything yet.
    This also give more flexibilty for me to control the changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Mainly the conents of the files relate to each other. A change in one file may affect another file, so it makes sense to save multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?

    git log views all the history changes made so far, each with the commit id and a description.
    git diff can be used to compare between two commits using their ids, the syntax is  :  git diff commit_id1 commit_id2

How might using version control make you more confident to make changes that
could break something?

    I have full control to go back to a previous version that was working, and compare the working commit with the buggy one.
    Use git checkout commit_id

Now that you have your workspace set up, what do you want to try using Git for?

    I'll be using Git for learning the Android Mobile development, and also for making my commerical programs.


    The main commands from lesson 1 are:
        git clone
        git log
        git diff id1 id2
        git checkout id

    The main commands from lesson 2 are:
        git init
        git status